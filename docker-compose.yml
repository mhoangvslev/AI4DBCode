version: '3'
services:
  postgres:
    container_name: "postgres"
    image: "postgres:13.4-buster"
    restart: "always"
    networks: [ postgresNetwork ]
    environment:
      HTTP_PROXY:
      HTTPS_PROXY:
      POSTGRES_PASSWORD: "123456"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "imdbload"
    user: postgres
    volumes:
      - "./schema.sql:/docker-entrypoint-initdb.d/schema.sql"
      - postgresVolume:/var/lib/postgresql/data   
    ports:
      - "5432:5432"
    
  rtos:
    depends_on: 
      - postgres
    container_name: "rtos"
    build:
      context: .
      dockerfile: Dockerfile
      network: "host"
      args:
        HTTP_PROXY:
        HTTPS_PROXY:
    environment:
      RTOS_JOB_DIR: "JOB-queries"
      RTOS_SCHEMA_FILE: "schema.sql"
      RTOS_DB_PASSWORD: "123456"
      RTOS_DB_USER: "postgres"
      RTOS_DB_NAME: "imdbload"
      RTOS_DB_HOST: "postgresql://${RTOS_DB_USER}:${RTOS_DB_PASSWORD}@postgres/${RTOS_DB_NAME}"
      RTOS_DB_PORT: "5433"
    networks: [ postgresNetwork ]
    #entrypoint: 'conda run --no-capture-output -n xp /bin/bash -c "python CostTraining.py"'

networks:
  postgresNetwork:
    driver: bridge 

volumes:
  postgresVolume: